pipeline {
  agent {
    docker {
      image 'node:20-alpine'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    IMAGE_NAME = "anujkupadhyay/my-react-app"
    IMAGE_TAG = "${BUILD_NUMBER}"
    DOCKER_HUB_CREDENTIALS = credentials('dockerhub-creds') 
  }

  stages {
    stage('Checkout') {
      steps {
        sh 'echo "Cloning Repo..."'
        git branch: 'main', url: 'https://github.com/anuj123upadhyay/react_1.git'
      }
    }

    stage('Install Dependencies') {
      steps {
        sh 'npm install'
      }
    }

    stage('Build React App') {
      steps {
        sh 'npm run build'
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          // Install Docker if needed
          sh 'apk add --update docker || true'
          
          // Build tagged image
          sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
          
          // Push to Docker Hub
          docker.withRegistry('https://index.docker.io/v1/', "${DOCKER_HUB_CREDENTIALS}") {
            docker.image("${IMAGE_NAME}:${IMAGE_TAG}").push()
            
            // Also push as latest for convenience
            sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest"
            docker.image("${IMAGE_NAME}:latest").push()
          }
        }
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        sh '''
          # Make sure sed is installed
          apk add --update sed || true
          
          # Install kubectl if needed
          if ! command -v kubectl &> /dev/null; then
            apk add --update curl
            curl -LO "https://dl.k8s.io/release/stable.txt"
            curl -LO "https://dl.k8s.io/release/\$(cat stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            mv kubectl /usr/local/bin/
          fi
          
          # Update image tag in deployment file
          sed -i.bak "s|image: ${IMAGE_NAME}:.*|image: ${IMAGE_NAME}:${IMAGE_TAG}|" k8s/deployment.yaml
          
          # Apply deployment
          kubectl apply -f k8s/deployment.yaml
        '''
      }
    }
  }
}